//===================================
// Running Content
//===================================

// This file builds generic "page", and populates it with running content & numbers in the
//places we want them, using the CSS3 margin box locations

// Let's pull in some stuff we'll use for styling

@import 'mixins', 'blank';

@include runninghead-padding;

// Down to business:
// We want different running content depending on the section type (which will be defined below)
$left-running-content:(
  front-matter-pages: $front-matter-running-content-left,
  introduction-pages: $introduction-running-content-left,
  part-pages: $part-running-content-left,
  chapter-pages: $chapter-running-content-left,
  back-matter-pages: $back-matter-running-content-left
) !default;

$right-running-content:(
  front-matter-pages: $front-matter-running-content-right,
  introduction-pages: $introduction-running-content-right,
  part-pages: $part-running-content-right,
  chapter-pages: $chapter-running-content-right,
  back-matter-pages: $back-matter-running-content-right
) !default;

//We want different page number formatting depending on the section type
$left-page-number:(
  front-matter-pages: $front-matter-page-number-left,
  introduction-pages: $introduction-page-number-left,
  part-pages: $part-page-number-left,
  chapter-pages: $chapter-page-number-left,
  back-matter-pages: $back-matter-page-number-left
) !default;

$right-page-number:(
  front-matter-pages: $front-matter-page-number-right,
  introduction-pages: $introduction-page-number-right,
  part-pages: $part-page-number-right,
  chapter-pages: $chapter-page-number-right,
  back-matter-pages: $back-matter-page-number-right
) !default;

// In ~/variables/_structure.scss we have defined options for where you
// want yout page numbers to appear, using the CSS3 paged media box margin model
// We will build a big ugly if-then statement, to populate numbers where we want them
// and everywhere else we will populate number locations with '' = null
// Note that we will also style the box, pulling in a mixin from the _mixins file
// Note also: one imagines that someone who knows what they are doing could make this
// more elegant, but, as the wise Del Griffith once said:
//"It's not pretty, but it will get you where you want to go."

@if $numbering-position == 'top-outside-corner' {
  $left-top-outside-corner-number: $left-page-number;
  $right-top-outside-corner-number: $right-page-number;
  $left-top-outside-corner-separator: $left-running-separator !default;
  $right-top-outside-corner-separator: $right-running-separator !default;
  @page:left {
    @top-left-corner {
      @include page-number;
    }
  }
  @page:right {
    @top-right-corner {
      @include page-number;
    }
  }
} @elseif $numbering-position == 'top-outside' {
  $left-top-outside-number: $left-page-number;
  $right-top-outside-number: $right-page-number;
  $left-top-outside-separator: $left-running-separator !default;
  $right-top-outside-separator: $right-running-separator !default;
  @page:left {
    @top-left {
      @include page-number;
    }
  }
  @page:right {
    @top-right {
      @include page-number;
    }
  }
} @elseif $numbering-position == 'top-center' {
  $left-top-center-number: $left-page-number;
  $right-top-center-number: $right-page-number;
  $left-top-center-separator: $left-running-separator !default;
  $right-top-center-separator: $right-running-separator !default;
  @page {
    @top-center {
      @include page-number;
    }
  }
} @elseif $numbering-position == 'top-inside' {
  $left-top-inside-number: $left-page-number;
  $right-top-inside-number: $right-page-number;
  $left-top-inside-separator: $left-running-separator !default;
  $right-top-inside-separator: $right-running-separator !default;
  @page:left {
    @top-right {
      @include page-number;
    }
  }
  @page:right {
    @top-left {
      @include page-number;
    }
  }
} @elseif $numbering-position == 'outside-top' {
  $left-outside-top-number: $left-page-number;
  $right-outside-top-number: $right-page-number;
  $left-outside-top-separator: $left-running-separator !default;
  $right-outside-top-separator: $right-running-separator !default;
  @page:left {
    @left-top {
      @include page-number;
    }
  }
  @page:right {
    @right-top {
      @include page-number;
    }
  }
} @elseif $numbering-position == 'outside-middle' {
  $left-outside-middle-number: $left-page-number;
  $right-outside-middle-number: $right-page-number;
  $left-outside-middle-separator: $left-running-separator !default;
  $right-outside-middle-separator: $right-running-separator !default;
  @page:left {
    @left-middle {
      @include page-number;
    }
  }
  @page:right {
    @right-middle {
      @include page-number;
    }
  }
} @elseif $numbering-position == 'outside-bottom' {
  $left-outside-bottom-number: $left-page-number;
  $right-outside-bottom-number: $right-page-number;
  $left-outside-bottom-separator: $left-running-separator;
  $right-outside-bottom-separator: $right-running-separator;
  @page:left {
    @left-bottom {
      @include page-number;
    }
  }
  @page:right {
    @right-bottom {
      @include page-number;
    }
  }
} @elseif $numbering-position == 'bottom-outside-corner' {
  $left-bottom-outside-corner-number: $left-page-number;
  $right-bottom-outside-corner-number: $right-page-number;
  $left-bottom-outside-corner-separator: $left-running-separator;
  $right-bottom-outside-corner-separator: $right-running-separator;
  @page:left {
    @bottom-left-corner {
      @include page-number;
    }
  }
  @page:right {
    @bottom-right-corner {
      @include page-number;
    }
  }
} @elseif $numbering-position == 'bottom-outside' {
  $left-bottom-outside-number: $left-page-number;
  $right-bottom-outside-number: $right-page-number;
  $left-bottom-outside-separator: $left-running-separator;
  $right-bottom-outside-separator: $right-running-separator;
  @page:left {
    @bottom-left {
      @include page-number;
    }
  }
  @page:right {
    @bottom-right {
      @include page-number;
    }
  }
} @elseif $numbering-position == 'bottom-center' {
  $left-bottom-center-number: $left-page-number;
  $right-bottom-center-number: $right-page-number;
  $left-bottom-center-separator: $left-running-separator;
  $right-bottom-center-separator: $right-running-separator;
  @page:left {
    @bottom-center {
      @include page-number;
    }
  }
  @page:right {
    @bottom-center {
      @include page-number;
    }
  }
} @elseif $numbering-position == 'bottom-inside' {
  $left-bottom-inside-number: $left-page-number;
  $right-bottom-inside-number: $right-page-number;
  $left-bottom-inside-separator: $left-running-separator;
  $right-bottom-inside-separator: $right-running-separator;
  @page:left {
    @bottom-right {
      @include page-number;
    }
  }
  @page:right {
    @bottom-left {
      @include page-number;
    }
  }
}

//We must also set all page number variables (left pages & right pages) to 'null' as default
//so that the boxes will be empty if no content is assigned

//top of page
$left-top-outside-corner-number: '' !default;
$right-top-outside-corner-number: '' !default;
$left-top-outside-number: '' !default;
$right-top-outside-number: '' !default;
$left-top-center-number: '' !default;
$right-top-center-number: '' !default;
$left-top-inside-number: '' !default;
$right-top-inside-number: '' !default;
$left-top-inside-corner-number: '' !default;
$right-top-inside-corner-number: '' !default;

//side of page
$left-outside-top-number: '' !default;
$right-outside-top-number: '' !default;
$left-outside-middle-number: '' !default;
$right-outside-middle-number: '' !default;
$left-outside-bottom-number: '' !default;
$right-outside-bottom-number: '' !default;

//bottom of page
$left-bottom-outside-corner-number: '' !default;
$right-bottom-outside-corner-number: '' !default;
$left-bottom-outside-number: '' !default;
$right-bottom-outside-number:'' !default;
$left-bottom-center-number: '' !default;
$right-bottom-center-number: '' !default;
$left-bottom-inside-number: '' !default;
$right-bottom-inside-number: '' !default;
$left-bottom-inside-corner-number: '' !default;
$right-bottom-inside-corner-number: '' !default;

//We should  do the same for separators (did we mention separators yet?)

//top of page
$left-top-outside-corner-separator: '' !default;
$right-top-outside-corner-separator: '' !default;
$left-top-outside-separator: '' !default;
$right-top-outside-separator: '' !default;
$left-top-center-separator: '' !default;
$right-top-center-separator: '' !default;
$left-top-inside-separator: '' !default;
$right-top-inside-separator: '' !default;
$left-top-inside-corner-separator: '' !default;
$right-top-inside-corner-separator: '' !default;

//side of page
$left-outside-top-separator: '' !default;
$right-outside-top-separator: '' !default;
$left-outside-middle-separator: '' !default;
$right-outside-middle-separator: '' !default;
$left-outside-bottom-separator: '' !default;
$right-outside-bottom-separator: '' !default;

//bottom of page
$left-bottom-outside-corner-separator: '' !default;
$right-bottom-outside-corner-separator: '' !default;
$left-bottom-outside-separator: '' !default;
$right-bottom-outside-separator:'' !default;
$left-bottom-center-separator: '' !default;
$right-bottom-center-separator: '' !default;
$left-bottom-inside-separator: '' !default;
$right-bottom-inside-separator: '' !default;
$left-bottom-inside-corner-separator: '' !default;
$right-bottom-inside-corner-separator: '' !default;


// Repeating the process above for running conent:
// In ~/variables/_structure.scss we have defined options for where you
// want your running content to appear, using the CSS3 paged media box margin model
// We will build a big ugly if-then statement, to populate running content where we want it
// and everywhere else we will populate number locations with '' = null
// and ... we pull styling in from the _mixins.scss file, as above

@if $running-content-position == 'top-outside-corner' {
  $left-top-outside-corner-content: $left-running-content !default;
  $right-top-outside-corner-content: $right-running-content !default;
  @page:left {
    @top-left-corner {
      @include runninghead-left;
    }
  }
  @page:right {
    @top-right-corner {
      @include runninghead-right;
    }
  }
} @elseif $running-content-position == 'top-outside' {
  $left-top-outside-content: $left-running-content !default;
  $right-top-outside-content: $right-running-content !default;
  @page:left {
    @top-left {
      @include runninghead-left;
    }
  }
  @page:right {
    @top-right {
      @include runninghead-right;
    }
  }
} @elseif $running-content-position == 'top-center' {
  $left-top-center-content: $left-running-content !default;
  $right-top-center-content: $right-running-content !default;
  @page:left {
    @top-center {
      @include runninghead-left;
    }
  }
  @page:right {
    @top-center {
      @include runninghead-right;
    }
  }
} @elseif $running-content-position == 'top-inside' {
  $left-top-inside-content: $left-running-content !default;
  $right-top-inside-content: $right-running-content !default;
  @page:left {
    @top-right {
      @include runninghead-left;
    }
  }
  @page:right {
    @top-left{
      @include runninghead-right;
    }
  }
} @elseif $running-content-position == 'outside-top' {
  $left-outside-top-content: $left-running-content !default;
  $right-outside-top-content: $right-running-content !default;
  @page:left {
    @left-top {
      @include runninghead-left;
    }
  }
  @page:right {
    @right-top {
      @include runninghead-right;
    }
  }
} @elseif $running-content-position == 'outside-middle' {
  $left-outside-middle-content: $left-running-content !default;
  $right-outside-middle-content: $right-running-content !default;
  @page:left {
    @left-middle {
      @include runninghead-left;
    }
  }
  @page:right {
    @right-middle {
      @include runninghead-right;
    }
  }
} @elseif $running-content-position == 'outside-bottom' {
  $left-outside-bottom-content: $left-running-content !default;
  $right-outside-bottom-content: $right-running-content !default;
  @page:left {
    @left-bottom {
      @include runninghead-left;
    }
  }
  @page:right {
    @right-bottom {
      @include runningfoot-right;
    }
  }
} @elseif $running-content-position == 'bottom-outside-corner' {
  $left-bottom-outside-corner-content: $left-running-content !default;
  $right-bottom-outside-corner-content: $right-running-content !default;
  @page:left {
    @bottom-left-corner {
      @include runningfoot-left;
    }
  }
  @page:right {
    @bottom-right-corner {
      @include runningfoot-right;
    }
  }
} @elseif $running-content-position == 'bottom-outisde' {
  $left-bottom-outside-content: $left-running-content !default;
  $right-bottom-outside-content: $right-running-content !default;
  @page:left {
    @bottom-left {
      @include runningfoot-left;
    }
  }
  @page:right {
    @bottom-right {
      @include runningfoot-right;
    }
  }
} @elseif $running-content-position == 'bottom-center' {
  $left-bottom-center-content: $left-running-content !default;
  $right-bottom-center-content: $right-running-content !default;
  @page:left {
    @bottom-center {
      @include runningfoot-left;
    }
  }
  @page:right {
    @bottom-center {
      @include runningfoot-right;
    }
  }
} @elseif $running-content-position == 'bottom-inside' {
  $left-bottom-inside-content: $left-running-content !default;
  $right-bottom-inside-content: $right-running-content !default;
  @page:left {
    @bottom-right{
      @include runningfoot-left;
    }
  }
  @page:right {
    @bottom-right {
      @include runningfoot-right;
    }
  }
}

//As above, we must set all page content variables (left pages & right pages) to 'null' as default

//top of page
$left-top-outside-corner-content: '' !default;
$right-top-outside-corner-content: '' !default;
$left-top-outside-content: '' !default;
$right-top-outside-content: '' !default;
$left-top-center-content: '' !default;
$right-top-center-content: '' !default;
$left-top-inside-content: '' !default;
$right-top-inside-content: '' !default;
$left-top-inside-corner-content: '' !default;
$right-top-inside-corner-content: '' !default;


//side of page
$left-outside-top-content: '' !default;
$right-outside-top-content: '' !default;
$left-outside-middle-content: '' !default;
$right-outside-middle-content: '' !default;
$left-outside-bottom-content: '' !default;
$right-outside-bottom-content: '' !default;

//bottom of page
$left-bottom-outside-corner-content: '' !default;
$right-bottom-outside-corner-content: '' !default;
$left-bottom-outside-content: '' !default;
$right-bottom-outside-content:'' !default;
$left-bottom-center-content: '' !default;
$right-bottom-center-content: '' !default;
$left-bottom-inside-content: '' !default;
$right-bottom-inside-content: '' !default;
$left-bottom-inside-corner-content: '' !default;
$right-bottom-inside-corner-content: '' !default;


// Now, we've defined: our options, our variables, and our defaults
// so we can define what a generic page looks like, using the variable settings above
// so let's make a generic page structure mixin (left page & right page)
//note we're using if-map-get, which will enable us to pull in the right variable
//depending on section type

@mixin page-structure-left {
  @top-left-corner {
    content: if-map-get($left-top-outside-corner-number, $page-type) $left-top-outside-corner-separator if-map-get($left-top-outside-corner-content, $page-type);
  }
  @top-left {
    content: if-map-get($left-top-outside-number, $page-type) $left-top-outside-separator if-map-get($left-top-outside-content, $page-type);
  }
  @top-center {
    content: if-map-get($left-top-center-number, $page-type) $left-top-center-separator if-map-get($left-top-center-content, $page-type);
  }
  @top-right {
    content: if-map-get($left-top-inside-content, $page-type) $left-top-inside-separator if-map-get($left-top-inside-number, $page-type);
  }
  @top-right-corner {
    content: if-map-get($left-top-inside-corner-content, $page-type) $left-top-inside-corner-separator if-map-get($left-top-inside-corner-number, $page-type);
  }
  @left-top {
    content: if-map-get($left-outside-top-number, $page-type) $left-outside-top-separator if-map-get($left-outside-top-content, $page-type);
  }
  @left-middle {
    content: if-map-get($left-outside-middle-number, $page-type) $left-outside-middle-separator if-map-get($left-outside-middle-content, $page-type);
  }
  @left-bottom {
    content: if-map-get($left-outside-bottom-number, $page-type) $left-outside-bottom-separator if-map-get($left-outside-bottom-content, $page-type);
  }
  @bottom-left-corner {
    content: if-map-get($left-bottom-outside-corner-number, $page-type) $left-bottom-outside-corner-separator if-map-get($left-bottom-outside-corner-content, $page-type);
  }
  @bottom-left {
    content: if-map-get($left-bottom-outside-number, $page-type) $left-bottom-outside-separator if-map-get($left-bottom-outside-content, $page-type);
  }
  @bottom-center {
    content: if-map-get($left-bottom-center-number, $page-type) $left-bottom-center-separator if-map-get($left-bottom-center-content, $page-type);
  }
  @bottom-right {
    content: if-map-get($left-bottom-inside-content, $page-type) $left-bottom-inside-separator if-map-get($left-bottom-inside-number, $page-type);
  }
  @bottom-right-corner {
    content: if-map-get($left-bottom-inside-corner-content, $page-type) $left-bottom-inside-corner-separator if-map-get($left-bottom-inside-corner-number, $page-type);
  }
}

@mixin page-structure-right {
  @top-left-corner {
    content: if-map-get($right-top-inside-corner-content, $page-type) $right-top-inside-corner-separator if-map-get($right-top-inside-corner-number, $page-type);
  }
  @top-left {
    content: if-map-get($right-top-inside-number, $page-type) $right-top-inside-separator if-map-get($right-top-inside-content, $page-type);
  }
  @top-center {
    content: if-map-get($right-top-center-content, $page-type) $right-top-center-separator if-map-get($right-top-center-number, $page-type);
  }
  @top-right {
    content: if-map-get($right-top-outside-content, $page-type) $right-top-outside-separator if-map-get($right-top-outside-number, $page-type);
  }
  @top-right-corner {
    content: if-map-get($right-top-outside-corner-content, $page-type) $right-top-outside-corner-separator if-map-get($right-top-outside-corner-number, $page-type);
  }
  @right-top {
    content: if-map-get($right-outside-top-content, $page-type) $right-outside-top-separator if-map-get($right-outside-top-number, $page-type);
  }
  @right-middle {
    content: if-map-get($right-outside-middle-content, $page-type) $right-outside-middle-separator if-map-get($right-outside-middle-number, $page-type);
  }
  @right-bottom {
    content: if-map-get($right-outside-bottom-content, $page-type) $right-outside-bottom-separator if-map-get($right-outside-bottom-number, $page-type);
  }
  @bottom-left-corner {
    content: if-map-get($right-bottom-inside-corner-number, $page-type) $right-bottom-inside-corner-separator if-map-get($right-bottom-inside-corner-content, $page-type);
  }
  @bottom-left {
    content: if-map-get($right-bottom-inside-number, $page-type) $right-bottom-inside-separator if-map-get($right-bottom-inside-content, $page-type);
  }
  @bottom-center {
    content: if-map-get($right-bottom-center-content, $page-type) $right-bottom-center-separator if-map-get($right-bottom-center-number, $page-type);
  }
  @bottom-right {
    content: if-map-get($right-bottom-outside-content, $page-type) $right-bottom-outside-separator if-map-get($right-bottom-outside-number, $page-type);
  }
  @bottom-right-corner {
    content: if-map-get($right-bottom-outside-corner-content, $page-type) $right-bottom-outside-corner-separator if-map-get($right-bottom-outside-corner-number, $page-type);
  }
}

//define specific page structure
//using the generic mixins above, and a $page-type variable,
//which allows us to stick different content & styling depending on the
//page type

$page-type: 'front-matter-pages';

@page front-matter:first {
  @include blank-head-and-foot;
}
@page front-matter:left {
  @include page-structure-left;
}
@page front-matter:right {
  @include page-structure-right;
}

$page-type: 'introduction-pages';

@page introduction:first {
  @include blank-head-and-foot;
}
@page introduction:left {
  @include page-structure-left;
}
@page introduction:right {
  @include page-structure-right;
}

$page-type: 'part-pages';

@page part:first {
  @include blank-head-and-foot;
}
@page part:left {
  @include page-structure-left;
}
@page part:right {
  @include page-structure-right;
}

$page-type: 'chapter-pages';

@page chapter:first {
  @include blank-head-and-foot;
}
@page chapter:left {
  @include page-structure-left;
}
@page chapter:right {
  @include page-structure-right;
}

$page-type: 'back-matter-pages';

@page back-matter:first {
  @include blank-head-and-foot;
}
@page back-matter:left {
  @include page-structure-left;
}
@page back-matter:right {
  @include page-structure-right;
}

//bob's your uncle
